
ðŸŽ¯ Prompt Profesional para ChatGPT:

Procesar un archivo CSV exportado desde Trello para obtener la siguiente salida con formato profesional. 
El archivo tiene las siguientes columnas: Name, URL, board, labels, list.

ðŸ”¹ Objetivo:
- Mantener columna Name (renombrada como "RM").
- Eliminar columna URL.
- Mantener columna board (renombrada como "PROYECTO").
- Extraer desde la columna labels:
    - Un nÃºmero entre llaves { } â†’ PRIORIDAD  Ejemplo: "{ 01 }" = 1
    - Un nombre de recurso â†’ ASIGNADO A (el nombre debe ser uno de los siguientes):
        - Dario Elola
        - Daniel Bordon
        - Valentina Juszkiewicz
        - Renzo Antonioli
        - Lucas Gutierrez
        - Vanina Zylberg
        - Carolina Gualdi
        - Franchesca Rivas
        - Luz Fox
- Mantener columna list (renombrada como "ESTADO TRELLO").

ðŸ”¹ Columnas de salida:
| COLUMNA        | DESCRIPCIÃ“N                                             |
|----------------|----------------------------------------------------------|
| ASIGNADO A     | Nombre extraÃ­do desde Columna labels                     |
| PRIORIDAD      | NÃºmero entre { } extraÃ­do desde la columna labels        |
| PROYECTO       | Contenido original de Columna board                      |
| ESTADO TRELLO  | Contenido original de Columna list                       |
| RM             | Contenido original de Columna Name                       |

ðŸ”¹ Formato de salida:
- Encabezados en MAYÃšSCULAS, NEGRITA, fondo gris claro.
- Ordenar por: ASIGNADO A, PRIORIDAD, PROYECTO, ESTADO TRELLO.
- Insertar fila en blanco al cambiar el valor de ASIGNADO A.
- Ajustar el tamaÃ±o de las columnas para que todas las celdas muestren todo el contenido (Â¡Â¡Â¡Â¡incluyendo los titulos!!!!)
- Excepto el tÃ­tulo, centrar el contenido de la columna PRIORIDAD.


EL RESULTADO LO QUIERO EN UN .XLSX PARA DESCARGAR

ðŸ“„ CÃ³digo Python Utilizado:

import pandas as pd
import re

# Cargar el CSV original
df = pd.read_csv("nombre_del_archivo.csv")

# Lista de recursos vÃ¡lidos
recursos_validos = [
    "Dario Elola", "Daniel Bordon", "Valentina Juszkiewicz", "Renzo Antonioli",
    "Lucas Gutierrez", "Vanina Zylberg", "Carolina Gualdi", "Franchesca Rivas"
]

# FunciÃ³n de extracciÃ³n
def extraer_prioridad_asignado(label):
    if pd.isna(label):
        return None, None
    prioridad = re.search(r"\{ *(\d+) *\}", label)
    asignado = next((nombre for nombre in recursos_validos if nombre in label), None)
    return (int(prioridad.group(1)) if prioridad else None), asignado

# Aplicar extracciÃ³n
df[['PRIORIDAD', 'ASIGNADO A']] = df['labels'].apply(lambda x: pd.Series(extraer_prioridad_asignado(x)))

# Renombrar columnas
df.rename(columns={'Name': 'RM', 'board': 'PROYECTO', 'list': 'ESTADO TRELLO'}, inplace=True)

# SelecciÃ³n y orden
df_final = df[['ASIGNADO A', 'PRIORIDAD', 'PROYECTO', 'ESTADO TRELLO', 'RM']]
df_final.sort_values(by=['ASIGNADO A', 'PRIORIDAD', 'PROYECTO', 'ESTADO TRELLO'], inplace=True)

# Insertar filas en blanco al cambiar el valor de 'ASIGNADO A'
output_rows = []
prev_asignado = None
for _, row in df_final.iterrows():
    if row['ASIGNADO A'] != prev_asignado and prev_asignado is not None:
        output_rows.append(pd.Series([None]*len(row), index=row.index))
    output_rows.append(row)
    prev_asignado = row['ASIGNADO A']
df_formatted = pd.DataFrame(output_rows)

# Exportar a Excel con formato
with pd.ExcelWriter("Tareas_Procesadas_Trello.xlsx", engine='xlsxwriter') as writer:
    df_formatted.to_excel(writer, sheet_name='Trello', index=False, startrow=1, header=False)
    workbook  = writer.book
    worksheet = writer.sheets['Trello']
    
    # Formato de encabezado
    header_format = workbook.add_format({
        'bold': True, 'text_wrap': True, 'valign': 'middle',
        'fg_color': '#D9D9D9', 'border': 1
    })
    for col_num, value in enumerate(df_formatted.columns):
        worksheet.write(0, col_num, value.upper(), header_format)

    # Ajustar ancho de columnas automÃ¡ticamente
    for i, col in enumerate(df_formatted.columns):
        max_len = max(df_formatted[col].astype(str).map(len).max(), len(col)) + 2
        worksheet.set_column(i, i, max_len)

    # Centrar la columna PRIORIDAD
    center_format = workbook.add_format({'align': 'center'})
    col_idx = df_formatted.columns.get_loc("PRIORIDAD")
    worksheet.set_column(col_idx, col_idx, None, center_format)
