A partir de este prompt, armar el cofigo python para realizar este proceso: dejo adjunto un ejemplo de los archivos para que tengas mas referencia: Solicitud de procesamiento de datos a partir de archivos CSV y generaci√≥n de archivo Excel consolidado

Hola, necesito que proceses dos archivos CSV para generar un nuevo archivo Excel con informaci√≥n combinada. A continuaci√≥n, detallo todos los pasos que deb√©s seguir cuidadosamente para que el proceso sea exitoso:

üîπ Archivos involucrados

Archivo principal

El nombre del archivo es una cadena num√©rica (por ejemplo: 123456.csv).

Est√° delimitado por comas (,).

Contiene una columna A con cadenas de texto que incluyen un n√∫mero entre la palabra "RM" y el s√≠mbolo "|".

La columna D contiene informaci√≥n adicional que debe ser extra√≠da completa.

Archivo adicional (referencial)

Nombre: issues.csv

Delimitado por punto y coma (;)

Contiene una columna con valores num√©ricos (formato int64) que deben ser comparados con los n√∫meros extra√≠dos del archivo principal.

‚ö†Ô∏è Consideraciones importantes

La columna del archivo principal contiene los n√∫meros como texto (string), mientras que issues.csv los tiene como n√∫meros (int64).

Convert√≠ los valores extra√≠dos del archivo principal a tipo num√©rico antes de realizar el cruce.

Si al leer alguno de los archivos ocurre un error de codificaci√≥n, intent√° reabrirlos utilizando una codificaci√≥n alternativa como:

"utf-8-sig"

"latin1"

üîÑ Proceso detallado

‚úÖ Paso 1: Extracci√≥n de datos del archivo principal

Desde la Columna A, extra√© √∫nicamente los n√∫meros ubicados entre la palabra "RM" y el s√≠mbolo "|" en cada celda.

Manten√© el encabezado original de la columna A.

Extra√© tambi√©n el contenido completo de la Columna D, incluyendo su encabezado.

Extra√© tambi√©n de la Columna C, las cadenas "ROBUSTECIMIENTO" o "CIERRE CUENTA DE INVERSI√ìN" o "CIERRE DE BALANCE...%" "INCIDENCIA PRODUCTIVA" o "[ PRIORIDAD ... ]" o " [ #... ALTA ]" (tener en cuenta que el numero de la prioridad puede ir variando.. tambien puede ir variando la cadena ALTA, MEDIA, ETC. tambien es conciderado como estado de prioridad) Dentro de esta celda cada una de las cadena estan separadas por ",". En caso de encontrar mas de una de las cadenas especificadas en una de las celdas, extraer todas.

‚úÖ Paso 2: Cruce con issues.csv

Us√° los n√∫meros extra√≠dos de la Columna A como clave de b√∫squeda para encontrar coincidencias en issues.csv.

Por cada coincidencia, extra√© los siguientes campos:

El valor de la columna "Estado".

El valor de la columna "Asignado a".

‚úÖ Paso 3: Generaci√≥n del archivo Excel final

Cre√° un archivo .xlsx con la siguiente estructura:

Columna	Descripci√≥n
A	N√∫meros extra√≠dos de la Columna A del archivo principal (Nombre en Excel: N√∫mero RM)
B	Contenido de la Columna D del archivo principal (Nombre en Excel: Estado TRELLO)
C	Valor de la columna "Estado" desde issues.csv (Nombre en Excel: Estado RM)
D	Valor de la columna "Asignado a" desde issues.csv (Nombre en Excel: Asignado a)
E	Valor de la columna "Asunto" desde issues.csv (Nombre en Excel: Asunto)
F   Completar con la palabra "SI", en el caso que dentro del Contenido extraido de la Columna D del archivo principal, se haya encontrado la cadena "ROBUSTECIMIENTO". (Nombre en Excel: ROBUSTECIMIENTO)
G   Completar con la palabra "SI", en el caso que dentro del Contenido extraido de la Columna D del archivo principal, se haya encontrado la cadena "CIERRE CUENTA DE INVERSI√ìN" o "CIERRE DE BALANCE...%" (Nombre en Excel: CIERRE CUENTA DE INVERSI√ìN)
H  Completar con la palabra "SI", en el caso que dentro del Contenido extraido de la Columna D del archivo principal, se haya encontrado la cadena "INCIDENCIA PRODUCTIVA". (Nombre en Excel: INCIDENCIA PRODUCTIVA)
I  Completar con la cadena de "prioridad" [ PRIORIDAD 0X ] o ALTA , BAJA ETC, en el caso que dentro del Contenido extra√≠do de la Columna D del archivo principal, se haya encontrado la cadena "[ PRIORIDAD...]" O ALTA, BAJA.... (Nombre en Excel: PRIORIDAD).

Las columnas F, G y H centrar el contenido

üé® Formato y resaltado condicional en Excel (aplicar el formato desde la columna "A" hasta la "I")

- Encabezados en MAY√öSCULAS, negrita, fondo gris claro.
- Si ASUNTO est√° vac√≠o:
  - Completar con "RM CERREDO"
  - Resaltar toda la fila en amarillo.

- Si "Estado RM est√° vac√≠o:
  - Completar con "RM CERREDO"
  - Resaltar toda la fila en amarillo.

- Si las columnas ROBUSTECIMIENTO	CIERRE CUENTA DE INVERSI√ìN	INCIDENCIA PRODUCTIVA estan vacias:
  -Completar con "NO" 
 

Si una fila cumple con las siguientes dos condiciones simult√°neamente:

En la columna "Estado TRELLO" contiene alguno de estos valores:

04 En Desarrollo | STAND BY

05 En Desarrollo | EN CURSO

07 En Prueba QA | BACKLOG

08 En Prueba QA | EN CURSO

10 Solicitud de Pasaje a PROD.

Y en la columna "Asignado a" se encuentra alguno de estos nombres:

Dario Elola

Nelson Daniel Bord√≥n

Valentina Juszkiewicz

Renzo Antonioli

Lucas Gutierrez

Vanina Zylberg

Carolina Noemi Gualdi

Franchesca Gabriela Rivas Veliz

Entonces, rellen√° esa fila en las columnas:

N√∫mero RM

Estado TRELLO

Estado RM

Asignado a

Asunto

ROBUSTECIMIENTO	

CIERRE CUENTA DE INVERSI√ìN	

INCIDENCIA PRODUCTIVA	

PRIORIDAD

...con color rojo.

üì¶ Entrega esperada

Un archivo Excel (.xlsx) generado con la estructura anterior, correctamente combinado y con los colores aplicados seg√∫n las reglas definidas.

- **‚ûï Nueva regla adicional de resaltado:**

  Si en un registro la columna **"Estado TRELLO"** contiene alguno de estos valores:

  - `05 En Desarrollo | EN CURSO`

  Y en la columna **"Estado RM"** existe cualquier texto que no contenga las palabras **"Desarrollo"** (no distingue may√∫sculas o min√∫sculas), entonces:

  Rellen√° toda la fila correspondiente de las columnas:

  - N√∫mero RM  
  - Estado TRELLO  
  - Estado RM  
  - Asignado a  
  - Asunto  
  - ROBUSTECIMIENTO	
  - CIERRE CUENTA DE INVERSI√ìN	
  - INCIDENCIA PRODUCTIVA	
  -  PRIORIDAD


  ...con color **rojo**.

 Si en un registro la columna **"Estado TRELLO"** NO contiene alguno de estos valores:

  - `05 En Desarrollo | EN CURSO`

  Y en la columna **"Estado RM"** existe cualquier texto que contenga las palabras **"Desarrollo"** (no distingue may√∫sculas o min√∫sculas), entonces:

  Rellen√° toda la fila correspondiente de las columnas:

  - N√∫mero RM  
  - Estado TRELLO  
  - Estado RM  
  - Asignado a  
  - Asunto  
  - ROBUSTECIMIENTO	
  - CIERRE CUENTA DE INVERSI√ìN	
  - INCIDENCIA PRODUCTIVA	
  -  PRIORIDAD

  ...con color **rojo**.
  
    Si en un registro la columna **"Estado TRELLO"** contiene alguno de estos valores:

  - `04 En Desarrollo | STAND BY`

  Y en la columna **"Estado RM"** existe cualquier texto que no contenga las palabras **"STAND BY"** (no distingue may√∫sculas o min√∫sculas), entonces:

  Rellen√° toda la fila correspondiente de las columnas:

  - N√∫mero RM  
  - Estado TRELLO  
  - Estado RM  
  - Asignado a  
  - Asunto  
  - ROBUSTECIMIENTO	
  - CIERRE CUENTA DE INVERSI√ìN	
  - INCIDENCIA PRODUCTIVA	
  -  PRIORIDAD

  ...con color **rojo**.


IMPORTANTE: Realiza el proceso de principio a fin, hasta llegar a la generacion de del archivo .xlsx para descargar sin consultarme. No omitas ninguna de las intrucciones anteriores... Revisa y asegurate que se aplique todo.


SUMO EJEMPLO DEL PAYTHON CON EL PROCESO:

import pandas as pd
import re
from openpyxl import Workbook
from openpyxl.styles import PatternFill, Font, Alignment
from openpyxl.utils.dataframe import dataframe_to_rows

# Funci√≥n para intentar leer CSV con diferentes codificaciones
def read_csv_with_encoding(file_path, delimiter):
    encodings = ['utf-8', 'utf-8-sig', 'latin1']
    for enc in encodings:
        try:
            return pd.read_csv(file_path, encoding=enc, delimiter=delimiter)
        except Exception:
            continue
    raise ValueError(f"No se pudo leer el archivo: {file_path}")

# Cargar archivos
principal_df = read_csv_with_encoding("123456.csv", ',')
issues_df = read_csv_with_encoding("issues.csv", ';')

# Extraer n√∫meros de la columna A entre "RM" y "|"
principal_df["N√∫mero RM"] = principal_df.iloc[:, 0].str.extract(r'RM\s*(\d+)\s*\|')[0]
principal_df["N√∫mero RM"] = pd.to_numeric(principal_df["N√∫mero RM"], errors='coerce')

# Extraer columna D y renombrar
principal_df["Estado TRELLO"] = principal_df.iloc[:, 3]

# Extraer claves de columna C
columna_c = principal_df.iloc[:, 2].fillna("")
def extraer_claves(texto):
    claves = {
        "ROBUSTECIMIENTO": False,
        "CIERRE CUENTA DE INVERSI√ìN": False,
        "CIERRE DE BALANCE": False,
        "INCIDENCIA PRODUCTIVA": False,
        "PRIORIDAD": []
    }

    if "ROBUSTECIMIENTO" in texto:
        claves["ROBUSTECIMIENTO"] = True
    if "CIERRE CUENTA DE INVERSI√ìN" in texto or "CIERRE DE BALANCE" in texto:
        claves["CIERRE CUENTA DE INVERSI√ìN"] = True
    if "INCIDENCIA PRODUCTIVA" in texto:
        claves["INCIDENCIA PRODUCTIVA"] = True

    prioridades = re.findall(r'\[ PRIORIDAD [^\]]+\]', texto)
    prioridades += re.findall(r'\b(ALTA|MEDIA|BAJA|CR√çTICA|URGENTE)\b', texto, flags=re.IGNORECASE)
    claves["PRIORIDAD"] = prioridades

    return claves

claves_extraidas = columna_c.apply(extraer_claves)
principal_df["ROBUSTECIMIENTO"] = claves_extraidas.apply(lambda x: "SI" if x["ROBUSTECIMIENTO"] else "NO")
principal_df["CIERRE CUENTA DE INVERSI√ìN"] = claves_extraidas.apply(lambda x: "SI" if x["CIERRE CUENTA DE INVERSI√ìN"] else "NO")
principal_df["INCIDENCIA PRODUCTIVA"] = claves_extraidas.apply(lambda x: "SI" if x["INCIDENCIA PRODUCTIVA"] else "NO")
principal_df["PRIORIDAD"] = claves_extraidas.apply(lambda x: ', '.join(set(x["PRIORIDAD"])) if x["PRIORIDAD"] else "")

# Unir con issues.csv
issues_df['N√∫mero RM'] = pd.to_numeric(issues_df.iloc[:, 0], errors='coerce')
merged = principal_df.merge(issues_df, on='N√∫mero RM', how='left')

# Crear DataFrame final
final_df = pd.DataFrame({
    "N√∫mero RM": merged["N√∫mero RM"],
    "Estado TRELLO": merged["Estado TRELLO"],
    "Estado RM": merged["Estado"],
    "Asignado a": merged["Asignado a"],
    "Asunto": merged.get("Asunto", "RM CERREDO"),
    "ROBUSTECIMIENTO": merged["ROBUSTECIMIENTO"],
    "CIERRE CUENTA DE INVERSI√ìN": merged["CIERRE CUENTA DE INVERSI√ìN"],
    "INCIDENCIA PRODUCTIVA": merged["INCIDENCIA PRODUCTIVA"],
    "PRIORIDAD": merged["PRIORIDAD"]
})

# Rellenar celdas vac√≠as con valores por defecto
final_df["Estado RM"].fillna("RM CERREDO", inplace=True)
final_df["Asunto"].fillna("RM CERREDO", inplace=True)
final_df["ROBUSTECIMIENTO"].replace("", "NO", inplace=True)
final_df["CIERRE CUENTA DE INVERSI√ìN"].replace("", "NO", inplace=True)
final_df["INCIDENCIA PRODUCTIVA"].replace("", "NO", inplace=True)

# Crear archivo Excel
wb = Workbook()
ws = wb.active
ws.title = "Consolidado"

# Escribir encabezado
header_font = Font(bold=True)
header_fill = PatternFill(start_color="DDDDDD", end_color="DDDDDD", fill_type="solid")
center_align = Alignment(horizontal="center", vertical="center")

for r in dataframe_to_rows(final_df, index=False, header=True):
    ws.append(r)

for cell in ws[1]:
    cell.font = header_font
    cell.fill = header_fill
    cell.alignment = center_align

# Aplicar centrado a columnas F, G, H
for row in ws.iter_rows(min_row=2, min_col=6, max_col=8):
    for cell in row:
        cell.alignment = center_align

# Guardar archivo
wb.save("/mnt/data/archivo_consolidado.xlsx")
